name: Build Radiator

on:
  workflow_dispatch: {}
  #schedule:
  #  - cron: "*/10 * * * *"  # every 10 minutes

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install tomli PyYAML jinja2 requests packaging

      # Rate-limit check (before the script runs)
      - name: Show GitHub REST API rate limit (before)
        shell: bash
        env:
          AUTH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          set -euo pipefail
          curl -s \
            -H "Authorization: Bearer $AUTH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/rate_limit |
          jq -r '.resources.core as $c | "BEFORE: limit=\($c.limit) remaining=\($c.remaining) used=\($c.used) reset_epoch=\($c.reset) reset=\($c.reset|todate)"'

      - name: Generate dashboard
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          ORG: netboxlabs
        run: |
          python scripts/generate_dashboard.py

      # Rate-limit check (after the script runs)
      - name: Show GitHub REST API rate limit (after)
        shell: bash
        env:
          AUTH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          set -euo pipefail
          curl -s \
            -H "Authorization: Bearer $AUTH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/rate_limit |
          jq -r '.resources.core as $c | "AFTER:  limit=\($c.limit) remaining=\($c.remaining) used=\($c.used) reset_epoch=\($c.reset) reset=\($c.reset|todate)"'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
